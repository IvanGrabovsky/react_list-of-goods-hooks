{"version":3,"sources":["GoodsList.tsx","App.tsx","index.tsx"],"names":["SortType","GoodsList","goods","useState","NONE","sortBy","setSortBy","minLength","setMinLength","isReversed","setIsReversed","listOfGoods","filter","good","length","reverse","sort","good1","good2","LENGTH","ALPHABET","localeCompare","className","map","type","onClick","name","id","value","onChange","event","Number","target","Array","_","index","goodsFromServer","App","isGoodsVisible","setIsGoodsVisible","ReactDOM","render","document","getElementById"],"mappings":"6KAEKA,E,sDAAAA,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAUE,IAAMC,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,EAA4BC,mBAAmBH,EAASI,MAAxD,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAkCH,mBAAiB,GAAnD,mBAAOI,EAAP,KAAkBC,EAAlB,KACA,EAAoCL,oBAAkB,GAAtD,mBAAOM,EAAP,KAAmBC,EAAnB,KAEMC,EAAcT,EACjBU,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUP,KAE7BE,GACFE,EAAYI,UA8Bd,OAfAJ,EAAYK,MAAK,SAACC,EAAOC,GACvB,OAAQb,GACN,KAAKL,EAASmB,OACZ,OAAOF,EAAMH,OAASI,EAAMJ,OAG9B,KAAKd,EAASoB,SACZ,OAAOH,EAAMI,cAAcH,GAG7B,QACE,OAAO,MAKX,sBAAKI,UAAU,MAAf,UACE,oBAAIA,UAAU,OAAd,SACGX,EAAYY,KAAI,SAAAV,GAAI,OACnB,6BACGA,GADMA,QAMb,wBACEW,KAAK,SACLF,UAAU,SACVG,QAAS,kBAAMnB,EAAUN,EAASoB,WAHpC,iCAQA,wBACEI,KAAK,SACLF,UAAU,SACVG,QAAS,kBAAMnB,EAAUN,EAASmB,SAHpC,4BAQA,wBACEK,KAAK,SACLF,UAAU,SACVG,QAAS,kBAAMf,GAAeD,IAHhC,qBAQA,wBACEe,KAAK,SACLF,UAAU,SACVG,QAhEQ,WACZf,GAAc,GACdJ,EAAUN,EAASI,MACnBI,EAAa,IA0DX,mBAQA,qBAAKc,UAAU,SAAf,SACE,wBACEI,KAAK,YACLC,GAAG,YACHC,MAAOrB,EACPsB,SApEe,SACrBC,GAEAtB,EAAauB,OAAOD,EAAME,OAAOJ,SA6D7B,SAOI,YAAI,IAAIK,MAAM,KAAKV,KAAI,SAACW,EAAGC,GAAJ,OACrB,wBAAQP,MAAOO,EAAQ,EAAvB,SACGA,EAAQ,eClGnBC,G,MAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAGWC,EAAgB,WAC3B,MAA4ClC,oBAAS,GAArD,mBAAOmC,EAAP,KAAuBC,EAAvB,KAEA,OACE,sBAAKjB,UAAU,oBAAf,UACE,oBAAIA,UAAU,uBAAd,2BAKGgB,EAWC,cAAC,EAAD,CAAWpC,MAAOkC,IAVlB,mCACE,wBACEZ,KAAK,SACLF,UAAU,SACVG,QAAS,kBAAMc,GAAkB,IAHnC,yBC3BZC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.02f182f8.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  const [sortBy, setSortBy] = useState<SortType>(SortType.NONE);\n  const [minLength, setMinLength] = useState<number>(1);\n  const [isReversed, setIsReversed] = useState<boolean>(false);\n\n  const listOfGoods = goods\n    .filter(good => good.length >= minLength);\n\n  if (isReversed) {\n    listOfGoods.reverse();\n  }\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortBy(SortType.NONE);\n    setMinLength(1);\n  };\n\n  const filterByLength = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setMinLength(Number(event.target.value));\n  };\n\n  listOfGoods.sort((good1, good2) => {\n    switch (sortBy) {\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n        break;\n\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n        break;\n\n      default:\n        return 0;\n    }\n  });\n\n  return (\n    <div className=\"box\">\n      <ul className=\"mb-4\">\n        {listOfGoods.map(good => (\n          <li key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n\n      <button\n        type=\"button\"\n        className=\"button\"\n        onClick={() => setSortBy(SortType.ALPHABET)}\n      >\n        Sort alphabetically\n      </button>\n\n      <button\n        type=\"button\"\n        className=\"button\"\n        onClick={() => setSortBy(SortType.LENGTH)}\n      >\n        Sort by length\n      </button>\n\n      <button\n        type=\"button\"\n        className=\"button\"\n        onClick={() => setIsReversed(!isReversed)}\n      >\n        Reverse\n      </button>\n\n      <button\n        type=\"button\"\n        className=\"button\"\n        onClick={reset}\n      >\n        Reset\n      </button>\n\n      <div className=\"select\">\n        <select\n          name=\"minLength\"\n          id=\"minLength\"\n          value={minLength}\n          onChange={filterByLength}\n        >\n          {\n            [...new Array(10)].map((_, index) => (\n              <option value={index + 1}>\n                {index + 1}\n              </option>\n            ))\n          }\n        </select>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { GoodsList } from './GoodsList';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [isGoodsVisible, setIsGoodsVisible] = useState(false);\n\n  return (\n    <div className=\"has-text-centered\">\n      <h1 className=\"title mt-3 is-size-3\">\n        List of goods\n      </h1>\n\n      {\n        !isGoodsVisible ? (\n          <>\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => setIsGoodsVisible(true)}\n            >\n              Start\n            </button>\n          </>\n        ) : (\n          <GoodsList goods={goodsFromServer} />\n        )\n      }\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}